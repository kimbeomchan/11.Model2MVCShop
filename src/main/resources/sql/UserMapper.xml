<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="UserMapper">


    <resultMap id="userSelectMap" type="user">
        <result property = "userId" 			column="user_id" 			jdbcType = "VARCHAR"/>
        <result property = "userName"	    column="user_name" 		    jdbcType = "VARCHAR"/>
        <result property = "password" 	    column="password" 		    jdbcType = "VARCHAR"/>
        <result property = "role" 			column ="role"				jdbcType = "VARCHAR"/>
        <result property = "ssn"			column ="ssn"				jdbcType = "VARCHAR"/>
        <result property = "phone"			column ="cell_phone"        jdbcType = "VARCHAR"/>
        <result property = "addr"			column = "addr"             jdbcType = "VARCHAR"/>
        <result property = "email"          column ='email'             jdbcType = "VARCHAR"/>
        <result property = "regDate"        column ="reg_date"          jdbcType = "TIMESTAMP"/>
    </resultMap>

    <!-- SQL : INSERT -->
    <insert id="addUser" parameterType="user">
        INSERT INTO users( user_id , user_name , password , role , ssn, cell_phone, addr, email , reg_date)
        VALUES ( #{userId} , #{userName} , #{password} ,'user', #{ssn:VARCHAR} ,
                 #{phone: VARCHAR }, #{addr: VARCHAR }, #{email: VARCHAR }, NOW() )
    </insert>

    <!-- SQL : SELECT ONE -->
    <select id="getUser" parameterType="string" resultMap="userSelectMap">
        SELECT
            user_id, user_name, password, role,
            cell_phone,
            addr,
            email,
            reg_date
        FROM users
        WHERE user_id = # {value}
    </select>

    <!-- SQL : UPDATE -->
    <update id="updateUser" parameterType="user">
        UPDATE users SET
                         user_name   = #{userName} ,
                         cell_phone  = #{phone} ,
                         addr        = #{addr} ,
                         email       =#{email}
        WHERE userId = #{userId}
    </update>

    <!-- SQL : SELECT LIST -->
    <select id="getUserList" parameterType="search" resultMap="userSelectMap">
        SELECT *
        FROM (
        SELECT *,
        @rownum:=@rownum+1 AS row_seq
        FROM (
        SELECT userId,
        user_name,
        email
        FROM users
        <if test=' searchCondition != null'>
            <where>
                <if test="searchCondition == 0 and searchKeyword !='' ">
                    userId = #{searchKeyword}
                </if>
                <if test="searchCondition == 1 and searchKeyword !='' ">
                    user_name = #{searchKeyword}
                </if>
            </where>
        </if>
        ORDER BY userId) inner_table, (SELECT @rownum:=0) r
        ) AS result
        WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum}
    </select>

    <!-- SQL : SELECT ROW Count -->
    <select id="getTotalCount" parameterType="search" resultType="int">
        SELECT COUNT(*)
        FROM (
        SELECT userId,
        user_name,
        email
        FROM users
        <if test="searchCondition != null">
            <where>
                <if test="searchCondition == 0 and searchKeyword !='' ">
                    userId = #{searchKeyword}
                </if >
                <if test ="searchCondition == 1 and searchKeyword!=' '' ">
                    user_name= #{searchKeyword}
                </if >
            </where >
        </if > ) countTable
    </select>
</mapper>
